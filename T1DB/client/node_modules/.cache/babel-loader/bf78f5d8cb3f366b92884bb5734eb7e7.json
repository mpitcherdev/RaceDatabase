{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\OneDrive\\\\Desktop\\\\School\\\\Fall 2022\\\\Capstone\\\\Turn1Database\\\\T1DB\\\\client\\\\src\\\\components\\\\edit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport InputMask from \"react-input-mask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n  const [form, setForm] = useState({\n    lastName: \"\",\n    track: \"\",\n    laptime: \"\",\n    condition: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(record);\n    }\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedRace = {\n      lastName: form.lastName,\n      track: form.track,\n      laptime: form.laptime,\n      notes: form.notes,\n      condition: form.condition\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedRace),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Lap Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"track\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter last name\",\n            className: \"form-control\",\n            id: \"lastName\",\n            value: form.lastName,\n            onChange: e => updateForm({\n              lastName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"track\",\n            children: \"Track\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter track name\",\n            className: \"form-control\",\n            id: \"track\",\n            value: form.track,\n            onChange: e => updateForm({\n              track: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"laptime\",\n            children: \"Lap Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 66\n          }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n            mask: \"9:99.999\",\n            id: \"lapMask\",\n            maskPlaceholder: null,\n            alwaysShowMask: true,\n            onChange: e => updateForm({\n              laptime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"notes\",\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            placeholder: \"Optional\",\n            className: \"form-control\",\n            id: \"notes\",\n            value: form.notes,\n            onChange: e => updateForm({\n              notes: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          id: \"dry-wet-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"DryBtn\",\n            type: \"submit\",\n            value: \"Dry\",\n            className: \"btn btn-primary\",\n            onClick: e => updateForm({\n              condition: \"Dry\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"WetBtn\",\n            type: \"submit\",\n            value: \"Wet\",\n            className: \"btn btn-primary\",\n            onClick: e => updateForm({\n              condition: \"Wet\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(Edit, \"uC1Xe6WnlNbzTcsY5gATbecYkZw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","InputMask","Edit","form","setForm","lastName","track","laptime","condition","records","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","updateForm","value","prev","onSubmit","e","preventDefault","editedRace","notes","method","body","JSON","stringify","headers","target"],"sources":["C:/Users/micha/OneDrive/Desktop/School/Fall 2022/Capstone/Turn1Database/T1DB/client/src/components/edit.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport InputMask from \"react-input-mask\";\r\nexport default function Edit() {\r\n    const [form, setForm] = useState({\r\n        lastName: \"\",\r\n        track: \"\",\r\n        laptime: \"\",\r\n        condition: \"\",\r\n        records: [],\r\n    });\r\n    const params = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const id = params.id.toString();\r\n            const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\r\n\r\n            if (!response.ok) {\r\n                const message = `An error has occurred: ${response.statusText}`;\r\n                window.alert(message);\r\n                return;\r\n            }\r\n\r\n            const record = await response.json();\r\n            if (!record) {\r\n                window.alert(`Record with id ${id} not found`);\r\n                navigate(\"/\");\r\n                return;\r\n            }\r\n\r\n            setForm(record);\r\n        }\r\n\r\n        fetchData();\r\n\r\n        return;\r\n    }, [params.id, navigate]);\r\n\r\n    // These methods will update the state properties.\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        const editedRace = {\r\n            lastName: form.lastName,\r\n            track: form.track,\r\n            laptime: form.laptime,\r\n            notes: form.notes,\r\n            condition: form.condition,\r\n        };\r\n\r\n        // This will send a post request to update the data in the database.\r\n        await fetch(`http://localhost:5000/update/${params.id}`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(editedRace),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        });\r\n\r\n        navigate(\"/\");\r\n    }\r\n\r\n    // This following section will display the form that takes input from the user to update the data.\r\n    return (\r\n        <div className= \"form-wrapper\">\r\n            <h3>Edit Lap Entry</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"track-name\">\r\n                <div className=\"form-group\">\r\n                        <label htmlFor=\"track\">Last Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter last name\"\r\n                            className=\"form-control\"\r\n                            id=\"lastName\"\r\n                            value={form.lastName}\r\n                            onChange={(e) => updateForm({ lastName: e.target.value })}\r\n                        />\r\n                </div>    \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"track\">Track</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter track name\"\r\n                        className=\"form-control\"\r\n                        id=\"track\"\r\n                        value={form.track}\r\n                        onChange={(e) => updateForm({ track: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                        <label htmlFor=\"laptime\">Lap Time</label><br></br>\r\n                        <InputMask mask = \"9:99.999\" id=\"lapMask\" maskPlaceholder={null} alwaysShowMask onChange={(e) => updateForm({laptime: e.target.value})}/> \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"notes\">Notes</label>\r\n                        <textarea\r\n                            type=\"text\"\r\n                            placeholder=\"Optional\"\r\n                            className=\"form-control\"\r\n                            id=\"notes\"\r\n                            value={form.notes}\r\n                            onChange={(e) => updateForm({ notes: e.target.value })}\r\n                        />\r\n                </div>       \r\n                    <div className=\"form-group\" id=\"dry-wet-buttons\">\r\n                        <input id=\"DryBtn\"\r\n                            type=\"submit\"\r\n                            value=\"Dry\"\r\n                            className=\"btn btn-primary\"\r\n                            onClick={(e) => updateForm({ condition: \"Dry\" })}\r\n                        />\r\n                        <input id=\"WetBtn\"\r\n                            type=\"submit\"\r\n                            value=\"Wet\"\r\n                            className=\"btn btn-primary\"\r\n                            onClick={(e) => updateForm({ condition: \"Wet\" })}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,cAAc;AACrD,OAAOC,SAAS,MAAM,kBAAkB;AAAC;AACzC,eAAe,SAASC,IAAI,GAAG;EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC7BQ,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE;EACb,CAAC,CAAC;EACF,MAAMC,MAAM,GAAGX,SAAS,EAAE;EAC1B,MAAMY,QAAQ,GAAGX,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IACZ,eAAec,SAAS,GAAG;MACvB,MAAMC,EAAE,GAAGH,MAAM,CAACG,EAAE,CAACC,QAAQ,EAAE;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BN,MAAM,CAACG,EAAE,CAACC,QAAQ,EAAG,EAAC,CAAC;MAEpF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAMC,OAAO,GAAI,0BAAyBH,QAAQ,CAACI,UAAW,EAAC;QAC/DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACJ;MAEA,MAAMI,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;MACpC,IAAI,CAACD,MAAM,EAAE;QACTF,MAAM,CAACC,KAAK,CAAE,kBAAiBR,EAAG,YAAW,CAAC;QAC9CF,QAAQ,CAAC,GAAG,CAAC;QACb;MACJ;MAEAP,OAAO,CAACkB,MAAM,CAAC;IACnB;IAEAV,SAAS,EAAE;IAEX;EACJ,CAAC,EAAE,CAACF,MAAM,CAACG,EAAE,EAAEF,QAAQ,CAAC,CAAC;;EAEzB;EACA,SAASa,UAAU,CAACC,KAAK,EAAE;IACvB,OAAOrB,OAAO,CAAEsB,IAAI,IAAK;MACrB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAGD;MAAM,CAAC;IAChC,CAAC,CAAC;EACN;EAEA,eAAeE,QAAQ,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,UAAU,GAAG;MACfzB,QAAQ,EAAEF,IAAI,CAACE,QAAQ;MACvBC,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBC,OAAO,EAAEJ,IAAI,CAACI,OAAO;MACrBwB,KAAK,EAAE5B,IAAI,CAAC4B,KAAK;MACjBvB,SAAS,EAAEL,IAAI,CAACK;IACpB,CAAC;;IAED;IACA,MAAMQ,KAAK,CAAE,gCAA+BN,MAAM,CAACG,EAAG,EAAC,EAAE;MACrDmB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAC;MAChCM,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEFzB,QAAQ,CAAC,GAAG,CAAC;EACjB;;EAEA;EACA,oBACI;IAAK,SAAS,EAAE,cAAc;IAAA,wBAC1B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eACvB;MAAM,QAAQ,EAAEgB,QAAS;MAAA,uBACrB;QAAK,SAAS,EAAC,YAAY;QAAA,wBAC3B;UAAK,SAAS,EAAC,YAAY;UAAA,wBACnB;YAAO,OAAO,EAAC,OAAO;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAkB,eACxC;YACI,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,iBAAiB;YAC7B,SAAS,EAAC,cAAc;YACxB,EAAE,EAAC,UAAU;YACb,KAAK,EAAExB,IAAI,CAACE,QAAS;YACrB,QAAQ,EAAGuB,CAAC,IAAKJ,UAAU,CAAC;cAAEnB,QAAQ,EAAEuB,CAAC,CAACS,MAAM,CAACZ;YAAM,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAC5D;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ,eACN;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAO,OAAO,EAAC,OAAO;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc,eACpC;YACI,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,kBAAkB;YAC9B,SAAS,EAAC,cAAc;YACxB,EAAE,EAAC,OAAO;YACV,KAAK,EAAEtB,IAAI,CAACG,KAAM;YAClB,QAAQ,EAAGsB,CAAC,IAAKJ,UAAU,CAAC;cAAElB,KAAK,EAAEsB,CAAC,CAACS,MAAM,CAACZ;YAAM,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QACzD;QAAA;UAAA;UAAA;UAAA;QAAA,QACA,eACN;UAAK,SAAS,EAAC,YAAY;UAAA,wBACnB;YAAO,OAAO,EAAC,SAAS;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAiB;YAAA;YAAA;YAAA;UAAA,QAAS,eAClD,QAAC,SAAS;YAAC,IAAI,EAAG,UAAU;YAAC,EAAE,EAAC,SAAS;YAAC,eAAe,EAAE,IAAK;YAAC,cAAc;YAAC,QAAQ,EAAGG,CAAC,IAAKJ,UAAU,CAAC;cAACjB,OAAO,EAAEqB,CAAC,CAACS,MAAM,CAACZ;YAAK,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QACvI,eACN;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAO,OAAO,EAAC,OAAO;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc,eACpC;YACI,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,UAAU;YACtB,SAAS,EAAC,cAAc;YACxB,EAAE,EAAC,OAAO;YACV,KAAK,EAAEtB,IAAI,CAAC4B,KAAM;YAClB,QAAQ,EAAGH,CAAC,IAAKJ,UAAU,CAAC;cAAEO,KAAK,EAAEH,CAAC,CAACS,MAAM,CAACZ;YAAM,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QACzD;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ,eACF;UAAK,SAAS,EAAC,YAAY;UAAC,EAAE,EAAC,iBAAiB;UAAA,wBAC5C;YAAO,EAAE,EAAC,QAAQ;YACd,IAAI,EAAC,QAAQ;YACb,KAAK,EAAC,KAAK;YACX,SAAS,EAAC,iBAAiB;YAC3B,OAAO,EAAGG,CAAC,IAAKJ,UAAU,CAAC;cAAEhB,SAAS,EAAE;YAAM,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QACnD,eACF;YAAO,EAAE,EAAC,QAAQ;YACd,IAAI,EAAC,QAAQ;YACb,KAAK,EAAC,KAAK;YACX,SAAS,EAAC,iBAAiB;YAC3B,OAAO,EAAGoB,CAAC,IAAKJ,UAAU,CAAC;cAAEhB,SAAS,EAAE;YAAM,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QACnD;QAAA;UAAA;UAAA;UAAA;QAAA,QACA;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GA/HuBN,IAAI;EAAA,QAQTH,SAAS,EACPC,WAAW;AAAA;AAAA,KATRE,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}